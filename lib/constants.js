"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get BASE_TYPE_SYMBOL () {
        return BASE_TYPE_SYMBOL;
    },
    get BRACKETED_STATEMENT_DEPTH () {
        return BRACKETED_STATEMENT_DEPTH;
    },
    get BRACKETED_TERM_DEPTH () {
        return BRACKETED_TERM_DEPTH;
    },
    get EMPTY_STRING () {
        return EMPTY_STRING;
    },
    get FUNCTION () {
        return FUNCTION;
    },
    get MISSING () {
        return MISSING;
    },
    get NOTHING () {
        return NOTHING;
    },
    get OCCAM_VERIFY_CLI () {
        return OCCAM_VERIFY_CLI;
    },
    get PROVISIONAL () {
        return PROVISIONAL;
    },
    get PROVISIONALLY () {
        return PROVISIONALLY;
    },
    get S () {
        return S;
    },
    get SINGLE_SPACE () {
        return SINGLE_SPACE;
    },
    get TYPE_TYPE () {
        return TYPE_TYPE;
    },
    get UNDEFINED () {
        return UNDEFINED;
    }
});
var S = "s";
var NOTHING = "";
var MISSING = "missing";
var FUNCTION = "function";
var TYPE_TYPE = "type";
var UNDEFINED = "undefined";
var PROVISIONAL = "Provisional";
var EMPTY_STRING = "";
var SINGLE_SPACE = " ";
var PROVISIONALLY = "provisionally";
var BASE_TYPE_SYMBOL = "<>";
var OCCAM_VERIFY_CLI = "Occam Verify-CLI";
var BRACKETED_TERM_DEPTH = 2;
var BRACKETED_STATEMENT_DEPTH = 2;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb25zdGFudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBjb25zdCBTID0gXCJzXCI7XG5leHBvcnQgY29uc3QgTk9USElORyA9IFwiXCI7XG5leHBvcnQgY29uc3QgTUlTU0lORyA9IFwibWlzc2luZ1wiO1xuZXhwb3J0IGNvbnN0IEZVTkNUSU9OID0gXCJmdW5jdGlvblwiO1xuZXhwb3J0IGNvbnN0IFRZUEVfVFlQRSA9IFwidHlwZVwiO1xuZXhwb3J0IGNvbnN0IFVOREVGSU5FRCA9IFwidW5kZWZpbmVkXCI7XG5leHBvcnQgY29uc3QgUFJPVklTSU9OQUwgPSBcIlByb3Zpc2lvbmFsXCI7XG5leHBvcnQgY29uc3QgRU1QVFlfU1RSSU5HID0gXCJcIjtcbmV4cG9ydCBjb25zdCBTSU5HTEVfU1BBQ0UgPSBcIiBcIjtcbmV4cG9ydCBjb25zdCBQUk9WSVNJT05BTExZID0gXCJwcm92aXNpb25hbGx5XCI7XG5leHBvcnQgY29uc3QgQkFTRV9UWVBFX1NZTUJPTCA9IFwiPD5cIjtcbmV4cG9ydCBjb25zdCBPQ0NBTV9WRVJJRllfQ0xJID0gXCJPY2NhbSBWZXJpZnktQ0xJXCI7XG5leHBvcnQgY29uc3QgQlJBQ0tFVEVEX1RFUk1fREVQVEggPSAyO1xuZXhwb3J0IGNvbnN0IEJSQUNLRVRFRF9TVEFURU1FTlRfREVQVEggPSAyO1xuIl0sIm5hbWVzIjpbIkJBU0VfVFlQRV9TWU1CT0wiLCJCUkFDS0VURURfU1RBVEVNRU5UX0RFUFRIIiwiQlJBQ0tFVEVEX1RFUk1fREVQVEgiLCJFTVBUWV9TVFJJTkciLCJGVU5DVElPTiIsIk1JU1NJTkciLCJOT1RISU5HIiwiT0NDQU1fVkVSSUZZX0NMSSIsIlBST1ZJU0lPTkFMIiwiUFJPVklTSU9OQUxMWSIsIlMiLCJTSU5HTEVfU1BBQ0UiLCJUWVBFX1RZUEUiLCJVTkRFRklORUQiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztRQVlhQTtlQUFBQTs7UUFHQUM7ZUFBQUE7O1FBREFDO2VBQUFBOztRQUxBQztlQUFBQTs7UUFKQUM7ZUFBQUE7O1FBREFDO2VBQUFBOztRQURBQztlQUFBQTs7UUFVQUM7ZUFBQUE7O1FBTEFDO2VBQUFBOztRQUdBQztlQUFBQTs7UUFUQUM7ZUFBQUE7O1FBUUFDO2VBQUFBOztRQUpBQztlQUFBQTs7UUFDQUM7ZUFBQUE7OztBQUxOLElBQU1ILElBQUk7QUFDVixJQUFNSixVQUFVO0FBQ2hCLElBQU1ELFVBQVU7QUFDaEIsSUFBTUQsV0FBVztBQUNqQixJQUFNUSxZQUFZO0FBQ2xCLElBQU1DLFlBQVk7QUFDbEIsSUFBTUwsY0FBYztBQUNwQixJQUFNTCxlQUFlO0FBQ3JCLElBQU1RLGVBQWU7QUFDckIsSUFBTUYsZ0JBQWdCO0FBQ3RCLElBQU1ULG1CQUFtQjtBQUN6QixJQUFNTyxtQkFBbUI7QUFDekIsSUFBTUwsdUJBQXVCO0FBQzdCLElBQU1ELDRCQUE0QiJ9